{"version":3,"sources":["Searchbar.js","ImageGalleryItem.js","ImageGallery.js","Button.js","SpinnerLoader.js","Modal.js","App.js","index.js"],"names":["Searchbar","state","searchQuery","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","url","bigHit","onClick","src","alt","width","data-image","ImageGallery","hits","map","hit","webformatURL","largeImageURL","id","Button","SpinnerLoader","color","height","timeout","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","children","App","page","query","isLoading","showModal","modalImg","onChangeSearchQuery","scrollTo","top","documentElement","scrollHeight","behavior","fetchHits","axios","get","then","response","prevState","data","catch","error","finally","modalOpen","hitOpen","nodeName","prevProps","length","dataset","image","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.615ea3c9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './styles.css';\r\n\r\nclass Searchbar extends Component {\r\n    state = { searchQuery: '' }\r\n    \r\n    handleChange = event => {\r\n        this.setState({searchQuery: event.currentTarget.value})\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        \r\n        this.props.onSubmit(this.state.searchQuery)\r\n        this.setState({ searchQuery: ''})\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"Searchbar\">\r\n                <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n                    <button type=\"submit\" className=\"SearchForm-button\">\r\n                        <span className=\"SearchForm-button-label\">Search</span>\r\n                    </button>\r\n                    <input\r\n                        className=\"SearchForm-input\"\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                        value={this.state.searchQuery}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </form>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Searchbar;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './styles.css';\r\n\r\nconst ImageGalleryItem = ({ url, bigHit, onClick }) => {\r\n    return (\r\n        <li className=\"ImageGalleryItem\">\r\n            <img\r\n                src={url}\r\n                alt=\"photo\"\r\n                width=\"260\"\r\n                data-image={bigHit}\r\n                className=\"ImageGalleryItem-image\"\r\n                onClick={onClick}\r\n            />\r\n        </li>\r\n    )\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n    url: PropTypes.string,\r\n    bigHit: PropTypes.string,\r\n};\r\n\r\nexport default ImageGalleryItem;","import React from 'react';\r\nimport ImageGalleryItem from './ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\nimport './styles.css';\r\n\r\nconst ImageGallery = ({ hits, onClick }) => {\r\n    return (\r\n        <ul className=\"ImageGallery\">\r\n            {hits.map(hit => (\r\n                <ImageGalleryItem\r\n                    key={hit.id}\r\n                    url={hit.webformatURL}\r\n                    bigHit={hit.largeImageURL}\r\n                    onClick={onClick}\r\n                />\r\n            ))}\r\n        </ul>\r\n    )\r\n};\r\n\r\nImageGallery.propTypes = {\r\n    hits: PropTypes.array.isRequired\r\n}\r\n\r\nexport default ImageGallery;","import React from 'react';\r\n\r\nconst Button = ({ onClick }) => {\r\n    return (\r\n        <button type=\"button\" onClick={onClick} className=\"Button\">Load more</button>\r\n    )\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\nimport './styles.css';\r\n\r\nconst SpinnerLoader = () => {\r\n    return (\r\n        <div className=\"Loader\">\r\n            <Loader\r\n                type=\"Circles\"\r\n                color=\"#00BFFF\"\r\n                height={100}\r\n                width={100}\r\n                timeout={3000}                \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SpinnerLoader;","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown)\r\n  }\r\n\r\n  handleKeyDown = event => {\r\n    if (event.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  }\r\n\r\n  handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  }\r\n\r\n  render() {    \r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">          \r\n          {this.props.children}\r\n        </div>\r\n      </div>, modalRoot);\r\n  }\r\n}\r\n\r\nexport default Modal;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Searchbar from './Searchbar';\nimport ImageGallery from './ImageGallery';\nimport Button from './Button';\nimport SpinnerLoader from './SpinnerLoader';\nimport Modal from './Modal';\nimport './styles.css';\n\n\n// axios.defaults.headers.common['Authorization'] = 'Bearer 19787930-3152e5d62708cea03366e4b32';\n\n\nclass App extends Component {\n  state = {\n    hits: [],\n    page: 1,\n    query: '',\n    isLoading: false,\n    showModal: false,\n    modalImg: ''\n  };\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.query !== this.state.query) {\n      this.fetchHits();\n      this.scrollTo();\n    }\n  }\n\n  onChangeSearchQuery = searchQuery => {\n    this.setState({ query: searchQuery, page: 1, hits: [] })      \n  }\n\n  scrollTo = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }\n\n  fetchHits = () => {\n    const key = '19787930-3152e5d62708cea03366e4b32';\n    const { page, query } = this.state;\n    const url = `https://pixabay.com/api/?q=${query}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`\n    \n    this.setState({isLoading: true})\n    \n    axios\n      .get(url)\n      .then(response => {\n        this.setState(prevState => ({\n          hits: [...prevState.hits, ...response.data.hits],\n          page: prevState.page + 1,\n        }));\n      })\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n  }\n\n  modalOpen = () => {    \n    this.setState(({ showModal }) => ({\n      showModal: !showModal      \n    }));\n  };\n\n  hitOpen = event => {\n    event.preventDefault();\n    if (event.target.nodeName !== 'IMG') {\n      return;\n    }\n    this.setState({ modalImg: event.target });\n    this.modalOpen();\n  };\n\n    \n\n  render() {\n    const { hits, modalImg, isLoading, showModal } = this.state;\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.onChangeSearchQuery} />\n        {isLoading && <SpinnerLoader />}\n        {hits.length > 0 && (<ImageGallery hits={hits} onClick={this.hitOpen}/>)}\n        {hits.length > 0 && <Button onClick={this.fetchHits} />}        \n        {showModal && (\n          <Modal modalImg={modalImg} onClose={this.modalOpen}>\n            <img src={modalImg.dataset.image} />             \n          </Modal>\n        )}\n      </div>\n    )    \n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}